name: CI/CD Pipeline
on:
  push:
    branches:
      - main
jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.x
          terraform_wrapper: true
      - name: Change to Terraform Directory
        run: '[ -d ./ ] && cd ./ || echo "Directory ./ not found, using root"'
      - name: Terraform Init
        run: terraform init -input=false
      - name: Terraform Refresh
        if: github.ref == 'refs/heads/main'
        run: terraform refresh
      - name: Terraform Destroy
        if: github.ref == 'refs/heads/main'
        run: terraform destroy -auto-approve
      - name: Terraform Plan
        run: terraform plan -input=false -out=tfplan
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
      - name: Capture Terraform Outputs
        id: capture_outputs
        run: |
          terraform output -json > tf_outputs.json
          echo "instance_public_ip=$(jq -r '.instance_public_ip.value' tf_outputs.json)" >> $GITHUB_ENV
    outputs:
      instance_public_ip: ${{ env.instance_public_ip }}
  app_deployment:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ needs.terraform.outputs.instance_public_ip }} >> ~/.ssh/known_hosts
      - name: Deploy App
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@${{ needs.terraform.outputs.instance_public_ip }} <<EOF
          cd /home/ec2-user/app
          pip install -r requirements.txt
          nohup python app.py &
          EOF